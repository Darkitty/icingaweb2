<?php
    if ( $this->hasPermission('monitoring/command/acknowledge-problem')
         && $this->hasPermission('monitoring/command/comment/add')
         && $this->hasPermission('monitoring/command/send-custom-notification')
         && $this->hasPermission('monitoring/command/downtime/schedule')
         && isset($checkNowForm)):
?>
<div class="toolbar clearfix">
    <ul>
    <?php if ($this->hasPermission('monitoring/command/acknowledge-problem')): ?>
        <li>
        <?php
            if ($object->getType() === $object::TYPE_HOST) {
                $ackLink = $this->href(
                    'monitoring/host/acknowledge-problem',
                    array('host' => $object->getName()),
                    null,
                    array('class' => 'action-link')
                );
            } else {
                $ackLink = $this->href(
                    'monitoring/service/acknowledge-problem',
                    array('host' => $object->getHost()->getName(), 'service' => $object->getName()),
                    null,
                    array('class' => 'action-link')
                );
            }
        ?>
        <?= $this->qlink(
                null,
                $ackLink,
                null,
                array(
                    'class'             => 'action-link',
                    'data-base-target'  => '_self',
                    'icon'              => 'ok',
                    'title'             => $this->translate(
                        'Acknowledge this problem, suppress all future notifications for it and tag it as being handled'
                    )
                )
            )
        ?>
        </li>
    <?php endif; // $this->hasPermission('monitoring/command/acknowledge-problem') ?>
    <?php if ($this->hasPermission('monitoring/command/comment/add')): ?>
        <li>
        <?php
            /** @var \Icinga\Module\Monitoring\Object\MonitoredObject $object */
            if ($object->getType() === $object::TYPE_HOST) {
                echo $addLink = $this->qlink(
                    null,
                    'monitoring/host/add-comment',
                    array('host' => $object->getName()),
                    array(
                        'class'             => 'action-link',
                        'data-base-target'  => '_self',
                        'icon'              => 'comment',
                        'title'             => $this->translate('Add a new comment to this host')
                    )
                );
            } else {
                echo $addLink = $this->qlink(
                    null,
                    'monitoring/service/add-comment',
                    array('host' => $object->getHost()->getName(), 'service' => $object->getName()),
                    array(
                        'class'             => 'action-link',
                        'data-base-target'  => '_self',
                        'icon'              => 'comment',
                        'title'             => $this->translate('Add a new comment to this service')
                    )
                );
            }
        ?>
        </li>
    <?php
        endif; // $this->hasPermission('monitoring/command/comment/add')
    ?>
    <?php if ($this->hasPermission('monitoring/command/send-custom-notification')): ?>
        <li>
        <?php
            if ($object->getType() === $object::TYPE_HOST) {
                /** @var \Icinga\Module\Monitoring\Object\Host $object */
                echo $this->qlink(
                    null,
                    'monitoring/host/send-custom-notification',
                    array('host' => $object->getName()),
                    array(
                        'class'             => 'action-link',
                        'data-base-target'  => '_self',
                        'icon'              => 'bell-alt',
                        'title'             => $this->translate(
                            'Send a custom notification to contacts responsible for this host'
                        )
                    )
                );
            } else {
                /** @var \Icinga\Module\Monitoring\Object\Service $object */
                echo $this->qlink(
                    null,
                    'monitoring/service/send-custom-notification',
                    array('host' => $object->getHost()->getName(), 'service' => $object->getName()),
                    array(
                        'class'             => 'action-link',
                        'data-base-target'  => '_self',
                        'icon'              => 'bell-alt',
                        'title'             => $this->translate(
                            'Send a custom notification to contacts responsible for this service'
                        )
                    )
                );
            }
        ?>
        </li>
    <?php endif; // $this->hasPermission('monitoring/command/send-custom-notification') ?>
    <?php if ($this->hasPermission('monitoring/command/downtime/schedule')): ?>
        <li>
        <?php
            /** @var \Icinga\Module\Monitoring\Object\MonitoredObject $object */
            if ($object->getType() === $object::TYPE_HOST) {
                echo $addLink = $this->qlink(
                    null,
                    'monitoring/host/schedule-downtime',
                    array('host' => $object->getName()),
                    array(
                        'class'             => 'action-link',
                        'data-base-target'  => '_self',
                        'icon'              => 'plug',
                        'title'             => $this->translate(
                            'Schedule a downtime to suppress all problem notifications within a specific period of time'
                        )
                    )
                );
            } else {
                echo $addLink = $this->qlink(
                    null,
                    'monitoring/service/schedule-downtime',
                    array('host' => $object->getHost()->getName(), 'service' => $object->getName()),
                    array(
                        'class'             => 'action-link',
                        'data-base-target'  => '_self',
                        'icon'              => 'plug',
                        'title'             => $this->translate(
                            'Schedule a downtime to suppress all problem notifications within a specific period of time'
                        )
                    )
                );
            }
        ?>
        </li> 
    <?php endif; // $this->hasPermission('monitoring/command/downtime/schedule') ?>
    <?php if (isset($checkNowForm)): // Form is unset if the current user lacks the respective permission ?>
        <li data-base-target="_self">
        <?php
            $toolbarCheckNowForm = clone $checkNowForm;
            echo $toolbarCheckNowForm->setSubmitLabel(null);
        ?>
        </li>
    <?php endif; // isset($checkNowForm) ?>
    </ul>
</div>
<?php endif; // Check if at least one li will eb created ?>